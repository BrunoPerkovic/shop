# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  city: String!
  country: String!
  county: County!
  countyCode: CountyCodesCroatia!
  id: Int!
  orders: [Order!]!
  postalCode: Int!
  street: String!
  streetNumber: Int!
  users: [Users!]!
}

type Category {
  categoryName: String!
  id: Int!
  products: [Product!]!
}

"""Counties in Croatia"""
enum County {
  BjelovarskoBilogorskaZupanija
  BrodskoPosavskaZupanija
  DubrovackoNeretvanskaZupanija
  GradZagreb
  IstarskaZupanija
  KarlovackaZupanija
  KoprivnickoKrizevackaZupanija
  KrapinskoZagorskaZupanija
  LickoSenjskaZupanija
  MedimurskaZupanija
  OsjeckoBaranjskaZupanija
  PozeskoSlavonskaZupanija
  PrimorskoGoranskaZupanija
  SibenskoKninskaZupanija
  SisackoMoslavackaZupanija
  SplitskoDalmatinskaZupanija
  VarazdinskaZupanija
  VirovitickoPodravskaZupanija
  VukovarskoSrijemskaZupanija
  ZadarskaZupanija
  ZagrebackaZupanija
}

"""County codes in Croatia"""
enum CountyCodesCroatia {
  BjelovarskoBilogorskaZupanija
  BrodskoPosavskaZupanija
  DubrovackoNeretvanskaZupanija
  GradZagreb
  IstarskaZupanija
  KarlovackaZupanija
  KoprivnickoKrizevackaZupanija
  KrapinskoZagorskaZupanija
  LickoSenjskaZupanija
  MedimurskaZupanija
  OsjeckoBaranjskaZupanija
  PozeskoSlavonskaZupanija
  PrimorskoGoranskaZupanija
  SibenskoKninskaZupanija
  SisackoMoslavackaZupanija
  SplitskoDalmatinskaZupanija
  VarazdinskaZupanija
  VirovitickoPodravskaZupanija
  VukovarskoSrijemskaZupanija
  ZadarskaZupanija
  ZagrebackaZupanija
}

input CreateAddressDto {
  city: String!
  country: String!
  county: County!
  countyCode: CountyCodesCroatia!
  postalCode: Int!
  street: String!
  streetNumber: Int!
}

input CreateOrderDto {
  addressId: Int!
  createdAt: DateTime!
  deleted: Boolean!
  deliveryDate: DateTime!
  name: String!
  orderDate: DateTime!
  paymentMethod: PaymentMethods!
  price: Float!
  productIds: [Int!]!
  status: ShippingStatus!
  updatedAt: DateTime!
  userId: Int!
}

input CreatePostDto {
  """post content"""
  content: Int!

  """post title"""
  title: Int!
}

input CreateProductDto {
  categories: [Int!]!
  description: String!
  name: String!
  price: Float!
  size: String!
}

input CreateUserDto {
  address: CreateAddressDto!
  deleted: Boolean!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
  role: Role!
  userName: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginResponseDto {
  """Generated access_token of the user"""
  access_token: String!
}

input LoginUserDto {
  """Users password on the platform"""
  password: String!

  """Users username on the platform"""
  username: String!
}

type Mutation {
  createOrder(createOrderDto: CreateOrderDto!): Order!

  """Create new post"""
  createPost(createPostDto: CreatePostDto!): Post!
  createProduct(createProductDto: CreateProductDto!): Product!
  deleteOrder(id: Int!): Boolean!

  """Delete post"""
  deletePost(id: Int!): Post!
  deleteProduct(id: Int!): Boolean!
  deleteUser(id: Int!): Users!
  loginUser(loginUserDto: LoginUserDto!): LoginResponseDto!
  signupUser(createUserDto: CreateUserDto!): Users!
  updateOrder(id: Int!, updateOrderDto: UpdateOrderDto!): Order!

  """Update post"""
  updatePost(updatePostDto: UpdatePostDto!): Post!
  updateProduct(id: Int!, updateProductDto: UpdateProductDto!): Product!
  updateUser(updateAddressDto: UpdateAddressDto!, updateUserDto: UpdateUserDto!): Users!
}

type Order {
  address: Address!
  createdAt: DateTime!
  deleted: Boolean!
  deliveryDate: DateTime!
  id: Int!
  name: String!
  orderDate: DateTime!
  paymentMethod: String!
  price: Float!
  products: [Product!]!
  status: String!
  updatedAt: DateTime!
  user: Users!
}

enum PaymentMethods {
  AmazonPay
  ApplePay
  Card
  Cash
  GooglePay
  PayPal
  SamsungPay
}

type Post {
  """author id"""
  author: Users!

  """total comments"""
  comments: Int!

  """post content"""
  content: String!

  """post creation date"""
  createdAt: DateTime!

  """post id"""
  id: Int!

  """post is archived"""
  isArchived: Boolean!

  """total likes"""
  likes: Int!

  """post title"""
  title: String!

  """post update date"""
  updatedAt: DateTime!
}

type Product {
  categories: [Category!]!
  description: String!
  id: Int!
  name: String!
  orders: [Order!]!
  price: Float!
  size: String!
}

type Query {
  order(id: Int!): Order!
  orders: [Order!]!

  """Get single post"""
  post(id: Int!): Post!

  """Get all posts"""
  posts: [Post!]!
  product(id: Int!): Product!
  products: [Product!]!
  userByEmail(email: String!): Users!
  userById(id: Int!): Users!
  userByName(userName: String!): Users!
  users: [Users!]!
}

"""User roles on the platform"""
enum Role {
  Admin
  User
}

enum ShippingStatus {
  Cancelled
  Delivered
  Pending
  Processing
  Shipped
}

input UpdateAddressDto {
  city: String
  country: String
  county: County
  countyCode: CountyCodesCroatia
  id: Int!
  postalCode: Int
  street: String
  streetNumber: Int
}

input UpdateOrderDto {
  addressId: Int
  createdAt: DateTime
  deleted: Boolean
  deliveryDate: DateTime
  id: Int!
  name: String
  orderDate: DateTime
  paymentMethod: PaymentMethods
  price: Float
  productIds: [Int!]
  status: ShippingStatus
  updatedAt: DateTime
  userId: Int
}

input UpdatePostDto {
  """post content"""
  content: Int
  id: Int!

  """post title"""
  title: Int
}

input UpdateProductDto {
  categories: [Int!]
  description: String
  id: Int!
  name: String
  price: Float
  size: String
}

input UpdateUserDto {
  address: CreateAddressDto
  deleted: Boolean
  email: String
  firstName: String
  id: Int!
  lastName: String
  password: String
  phone: String
  role: Role
  userName: String
}

type Users {
  address: Address!
  createdAt: DateTime!
  deleted: Boolean!
  deletedAt: DateTime!
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  orders: [Order!]!
  password: String!
  phone: String!

  """authos posts"""
  posts: Post!
  role: Role!
  userName: String!
}